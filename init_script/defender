#!/bin/sh
### BEGIN INIT INFO
# Provides:          defender
# Required-Start:    $all
# Required-Stop:    
# Should-Start:
# Should-Stop:
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: defender daemon
# Description:       Starts the defender daemon with the user specified in
#                    /root/defender.
### END INIT INFO

# Author: Hao Tseng

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

DESC="defender Daemon"
NAME="defender"
DAEMON=defender.sh
DAEMON_EXEC_DIR=/root/${NAME}
DAEMON_USER="root"
PIDFILE=/var/run/${NAME}.pid
SCRIPTNAME=/etc/init.d/${NAME}
UMASK=022


# Exit if the mjpg-streamer is not installed
[ -x "$DAEMON_EXEC_DIR/$DAEMON" ] || exit 0

# Load the VERBOSE setting and other rcS variables
[ -f /etc/default/rcS ] && . /etc/default/rcS

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
. /lib/lsb/init-functions



#
# Function to verify if a pid is alive
#
is_alive()
{ 
   pid=`cat $1` > /dev/null 2>&1
   kill -0 $pid > /dev/null 2>&1
   return $?
}


#
# Function that starts the daemon/service
#
do_start()
{
   # Return
   #   0 if daemon has been started
   #   1 if daemon was already running
   #   2 if daemon could not be started

   is_alive $PIDFILE
   RETVAL="$?"

   if [ $RETVAL != 0 ]; then
       start-stop-daemon --start --background --quiet --pidfile $PIDFILE --make-pidfile \
       --exec $DAEMON_EXEC_DIR/$DAEMON --chuid $DAEMON_USER --user $DAEMON_USER --umask $UMASK -- start daemon
       RETVAL="$?"
   fi
}


#
# Function that stops the daemon/service
#
do_stop()
{
   # Return
   #   0 if daemon has been stopped
   #   1 if daemon was already stopped
   #   2 if daemon could not be stopped
   #   other if a failure occurred

   start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --user $DAEMON_USER --pidfile $PIDFILE
   RETVAL="$?"

   rm -f $PIDFILE

   $DAEMON_EXEC_DIR/$DAEMON stop daemon

   [ "$RETVAL" = "2" ] && return 2
   [ "$RETVAL" = "0" ] && return 0 || return 1
}


case "$1" in
  start)
   [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
   do_start
   case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
   esac
   ;;
  stop)
   [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
   do_stop
   case "$?" in
      0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
      2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
   esac
   ;;
  restart)
   log_daemon_msg "Restarting $DESC" "$NAME"
   do_stop
   case "$?" in
     0|1)
      do_start
      case "$?" in
         0) log_end_msg 0 ;;
         1) log_end_msg 1 ;; # Old process is still running
         *) log_end_msg 1 ;; # Failed to start
      esac
      ;;
     *)
        # Failed to stop
      log_end_msg 1
      ;;
   esac
   ;;
  status)
   status_of_proc -p ${PIDFILE} $DAEMON_EXEC_DIR/$DAEMON $DAEMON && exit 0 || exit $?;
   ;;
  *)
   echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
   exit 3
   ;;
esac


:
